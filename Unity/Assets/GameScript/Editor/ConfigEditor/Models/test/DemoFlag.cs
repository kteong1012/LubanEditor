
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace editor.cfg.test
{
    [System.Flags]
    public enum DemoFlag
    {
        /// <summary>
        /// 啊
        /// </summary>
        A = 1,
        /// <summary>
        /// 波
        /// </summary>
        B = 2,
        /// <summary>
        /// 擦
        /// </summary>
        C = 4,
        /// <summary>
        /// 的
        /// </summary>
        D = 8,
    }

    [System.Flags]
    public enum DemoFlag_Alias
    {
        啊 = 1,
        波 = 2,
        擦 = 4,
        的 = 8,
    }

    public static class DemoFlag_Metadata
    {
        public static readonly Luban.EditorEnumItemInfo A = new Luban.EditorEnumItemInfo("A", "啊", 1, "啊");
        public static readonly Luban.EditorEnumItemInfo B = new Luban.EditorEnumItemInfo("B", "波", 2, "波");
        public static readonly Luban.EditorEnumItemInfo C = new Luban.EditorEnumItemInfo("C", "擦", 4, "擦");
        public static readonly Luban.EditorEnumItemInfo D = new Luban.EditorEnumItemInfo("D", "的", 8, "的");

        private static readonly System.Collections.Generic.List<Luban.EditorEnumItemInfo> __items = new System.Collections.Generic.List<Luban.EditorEnumItemInfo>
        {
            A,
            B,
            C,
            D,
        };

        public static System.Collections.Generic.List<Luban.EditorEnumItemInfo> GetItems() => __items;

        public static Luban.EditorEnumItemInfo GetByName(string name)
        {
            return __items.Find(c => c.Name == name);
        }

        public static Luban.EditorEnumItemInfo GetByNameOrAlias(string name)
        {
            return __items.Find(c => c.Name == name || c.Alias == name);
        }

        public static Luban.EditorEnumItemInfo GetByValue(int value)
        {
            return __items.Find(c => c.Value == value);
        }
    }

} 

